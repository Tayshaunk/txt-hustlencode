{"version":3,"file":"static/js/734.2a67d6b0.chunk.js","mappings":"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","sources":["api/profile.api.ts","webpack://hustlencode.io/./src/components/CodeEditor/CodeEditor.module.scss?8f1b","components/CodeEditor/CodeEditor.tsx","webpack://hustlencode.io/./src/components/MobileCodeEditor/MobileCodeEditor.module.scss?3e17","components/MobileCodeEditor/MobileCodeEditor.tsx","components/NotFoundRender/NotFoundRender.tsx","webpack://hustlencode.io/./src/components/ProfilePreviewModule/ProfilePreviewModule.module.scss?e147","components/ProfilePreviewModule/ProfilePreviewModule.tsx","webpack://hustlencode.io/./src/components/SplitCodeEditor/SplitCodeEditor.module.scss?5d44","components/SplitCodeEditor/SplitCodeEditor.tsx","hooks/editor/usePostEditor.ts","hooks/shared/usePreviousPathNav.ts"],"sourcesContent":["import { UpdateHustlencodeProfileAboutDto, UpdateHustlencodeProfileInterestsDto, UpdateHustlencodeProfileLayoutDto } from 'dtos/hustlencode-profile.dto';\r\nimport { ICode } from 'interfaces/post.interface';\r\nimport { IServerResponse } from 'interfaces/server.interface';\r\nimport axiosInstance from '../config/axios.config';\r\nimport { IHustlencodeUser } from '../interfaces/user.interface';\r\n\r\n// base API path for api requests\r\nconst BASE_URL = `/hustlencode/profile`;\r\n\r\n/**\r\n * Makes API request for users profile data\r\n * @param username The user's username\r\n * @returns\r\n * - User profile data\r\n */\r\nexport const getProfileApi = async (username: string): Promise<IHustlencodeUser> => {\r\n  const url = `${BASE_URL}/${username}`;\r\n\r\n  const response = await axiosInstance.get<any>(url);\r\n\r\n  // return user token\r\n  return response.data.payload;\r\n};\r\n\r\n/**\r\n * Returns Code for the profile about module\r\n * @param username the user's username\r\n * @returns\r\n * - Code for the about module\r\n */\r\nexport const getProfileAboutApi = async (username: string): Promise<ICode> => {\r\n  const url = `${BASE_URL}/${username}/about`;\r\n\r\n  const response = await axiosInstance.get<any>(url);\r\n\r\n  // return user token\r\n  return response.data.payload;\r\n};\r\n\r\n/**\r\n * Returns code for the profile interests module\r\n * @param username the user's username\r\n * @returns\r\n * - Code for the interests module\r\n */\r\nexport const getProfileInterestsApi = async (username: string): Promise<ICode> => {\r\n  const url = `${BASE_URL}/${username}/interests`;\r\n\r\n  const response = await axiosInstance.get<any>(url);\r\n\r\n  // return user token\r\n  return response.data.payload;\r\n};\r\n\r\n\r\n/**\r\n * Returns Code for the profile layout\r\n * @param username the user's username\r\n * @returns\r\n * - Code for layout\r\n */\r\n export const getProfileLayoutApi = async (username: string): Promise<ICode> => {\r\n  const url = `${BASE_URL}/${username}/layout`;\r\n\r\n  const response = await axiosInstance.get<any>(url);\r\n\r\n  // return user token\r\n  return response.data.payload;\r\n};\r\n\r\n/**\r\n * Updates and returns the code for the profile layout\r\n * @param username the user's username\r\n * @param payload The updated code for layout\r\n * @returns\r\n * - The update profile layout code\r\n */\r\n export const updateProfileLayoutApi = async (username: string, payload: UpdateHustlencodeProfileLayoutDto): Promise<IServerResponse> => {\r\n  const url = `${BASE_URL}/${username}/layout`;\r\n\r\n  const response = await axiosInstance.put<any>(url, payload);\r\n\r\n  // return user token\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Updates and returns the code for the profile about module\r\n * @param username the user's username\r\n * @param payload The updated code for the module\r\n * @returns\r\n * - The update profile about module code\r\n */\r\nexport const updateProfileAboutApi = async (username: string, payload: UpdateHustlencodeProfileAboutDto): Promise<IServerResponse> => {\r\n  const url = `${BASE_URL}/${username}/about`;\r\n\r\n  const response = await axiosInstance.put<any>(url, payload);\r\n\r\n  // return user token\r\n  return response.data;\r\n};\r\n\r\n/**\r\n * Updates and returns the code for the profile interests module\r\n * @param username the user's username\r\n * @param payload The updated code for the interests module\r\n * @returns\r\n * - The the updated interests module\r\n */\r\nexport const updateProfileInterestsApi = async (username: string, payload: UpdateHustlencodeProfileInterestsDto): Promise<IServerResponse> => {\r\n  const url = `${BASE_URL}/${username}/interests`;\r\n\r\n  const response = await axiosInstance.put<any>(url, payload);\r\n\r\n  // return user token\r\n  return response.data;\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CodeEditor_container__zNWs5\",\"header\":\"CodeEditor_header__Txhjd\",\"title\":\"CodeEditor_title__ii0lV\",\"editorContainer\":\"CodeEditor_editorContainer__5RqoY\",\"format\":\"CodeEditor_format__VBPP2\"};","import Editor, { OnMount, OnChange } from '@monaco-editor/react';\r\n\r\n// styles\r\nimport classes from './CodeEditor.module.scss';\r\n\r\ninterface IProps {\r\n  editor: {\r\n    value: string;\r\n    theme: string;\r\n    handleEditorDidMount: OnMount;\r\n    handleEditorChange: OnChange;\r\n  };\r\n  height: number;\r\n  title?: string;\r\n  defaultLanguage: string;\r\n  defaultValue: string;\r\n}\r\n\r\n/**\r\n *\r\n * @param props\r\n * @returns\r\n */\r\nconst CodeEditor = (props: IProps) => {\r\n  const {  title, editor, defaultValue, defaultLanguage, height } = props;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {title ? (\r\n        <div className={classes.header}>\r\n          <div>\r\n            <p className={classes.title}>{title}</p>\r\n          </div>\r\n          <div />\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.editorContainer} style={{ height, width: '100%', backgroundColor: '#1E1E1E' }}>\r\n        <Editor\r\n          onMount={editor.handleEditorDidMount}\r\n          value={editor.value}\r\n          defaultLanguage={defaultLanguage}\r\n          defaultValue={defaultValue}\r\n          onChange={editor.handleEditorChange}\r\n          theme={editor.theme}\r\n          options={{\r\n            scrollBeyondLastLine: true,\r\n            minimap: { enabled: false },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tabToolBarWrapper\":\"MobileCodeEditor_tabToolBarWrapper__oleKr\",\"title\":\"MobileCodeEditor_title__hTRkU\",\"tabButtonToolBar\":\"MobileCodeEditor_tabButtonToolBar__yQPcD\",\"tab\":\"MobileCodeEditor_tab__FLiOI\",\"tabBtn\":\"MobileCodeEditor_tabBtn__JCjXr\",\"active\":\"MobileCodeEditor_active__Sizq2\",\"header\":\"MobileCodeEditor_header__VaSja\",\"btn\":\"MobileCodeEditor_btn__dPqlr\",\"headerLeft\":\"MobileCodeEditor_headerLeft__KoB-j\",\"headerRight\":\"MobileCodeEditor_headerRight__4BBi-\",\"editorContainer\":\"MobileCodeEditor_editorContainer__xqGtU\",\"postContainer\":\"MobileCodeEditor_postContainer__emlDG\",\"post\":\"MobileCodeEditor_post__W1A2e\"};","import ButtonSpinner from 'components/Buttons/ButtonSpinner/ButtonSpinner';\r\nimport { IUseCodeEditor } from 'interfaces/code.interface';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button } from 'rsuite';\r\nimport CodeEditor from '../CodeEditor/CodeEditor';\r\nimport classes from './MobileCodeEditor.module.scss';\r\n\r\ninterface IProps {\r\n  htmlEditor?: IUseCodeEditor;\r\n  cssEditor?: IUseCodeEditor;\r\n  jsEditor?: IUseCodeEditor;\r\n  isSaving: boolean;\r\n  children: any;\r\n  actionLabel: string;\r\n  exitEditorHandler: () => void;\r\n  saveAndExitHandler?: () => void;\r\n  saveHandler: () => void;\r\n  updateHandler: () => void;\r\n}\r\n\r\nconst MobileCodeEditor = (props: IProps) => {\r\n  const {\r\n    isSaving,\r\n    htmlEditor,\r\n    cssEditor,\r\n    jsEditor,\r\n    actionLabel,\r\n    children,\r\n    exitEditorHandler,\r\n    saveAndExitHandler,\r\n    saveHandler,\r\n    updateHandler,\r\n  } = props;\r\n\r\n  // current active tab\r\n  const [tabs, setTabs] = useState<any[]>([]);\r\n  // current active tab\r\n  const [activeTab, setActiveTab] = useState<number>(tabs.length - 1);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    function getTabs() {\r\n      const t = [];\r\n      if (htmlEditor) t.push({ label: 'HTML' });\r\n      if (cssEditor) t.push({ label: 'CSS' });\r\n      if (jsEditor) t.push({ label: 'JS' });\r\n      t.push({ label: 'Preview' });\r\n\r\n      setTabs(t);\r\n      setActiveTab(t.length - 1);\r\n    }\r\n\r\n    if (mounted) getTabs();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [htmlEditor, cssEditor, jsEditor]);\r\n\r\n  const getTabIndex = (label: string) => {\r\n    return tabs.map(t => t.label).indexOf(label);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.tabToolBarWrapper}>\r\n      <div className={classes.tabButtonToolBar}>\r\n        {tabs.map((t, i) => (\r\n          <div key={t.label} className={`${classes.tab} ${i === activeTab ? classes.active : ''}`}>\r\n            <Button\r\n              className={classes.tabBtn}\r\n              onClick={() => {\r\n                setActiveTab(i);\r\n                if (tabs.length - 1 === 3) updateHandler();\r\n              }}\r\n            >\r\n              <p>{t.label}</p>\r\n            </Button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {htmlEditor ? (\r\n        <div\r\n          style={{ display: activeTab === getTabIndex('HTML') ? 'block' : 'none' }}\r\n          className={classes.editorContainer}\r\n        >\r\n          <CodeEditor editor={htmlEditor} height={100} defaultLanguage=\"html\" defaultValue=\"\" />\r\n        </div>\r\n      ) : null}\r\n\r\n      {cssEditor ? (\r\n        <div style={{ display: activeTab === getTabIndex('CSS') ? 'block' : 'none' }} className={classes.editorContainer}>\r\n          <CodeEditor editor={cssEditor} height={100} defaultLanguage=\"css\" defaultValue=\"\" />\r\n        </div>\r\n      ) : null}\r\n\r\n      {jsEditor ? (\r\n        <div style={{ display: activeTab === getTabIndex('JS') ? 'block' : 'none' }} className={classes.editorContainer}>\r\n          <CodeEditor editor={jsEditor} height={100} defaultLanguage=\"javascript\" defaultValue=\"\" />\r\n        </div>\r\n      ) : null}\r\n\r\n      <div style={{ display: activeTab === getTabIndex('Preview') ? 'flex' : 'none' }} className={classes.postContainer}>\r\n        <div className={classes.header}>\r\n          <div className={classes.headerLeft}>\r\n            <ButtonSpinner\r\n              className={classes.btn}\r\n              size=\"xs\"\r\n              color=\"red\"\r\n              type={'button'}\r\n              appearance={'primary'}\r\n              label={'Exit Editor'}\r\n              isLoading={false}\r\n              disabled={isSaving}\r\n              onClick={exitEditorHandler}\r\n            />\r\n\r\n            {saveAndExitHandler ? (\r\n              <ButtonSpinner\r\n                className={classes.btn}\r\n                size=\"xs\"\r\n                color=\"green\"\r\n                type={'button'}\r\n                appearance={'primary'}\r\n                label={'Save And Exit'}\r\n                isLoading={isSaving}\r\n                disabled={isSaving}\r\n                onClick={saveAndExitHandler}\r\n              />\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n\r\n          <div className={classes.headerRight}>\r\n            <ButtonSpinner\r\n              className={classes.btn}\r\n              size=\"xs\"\r\n              color=\"green\"\r\n              type={'button'}\r\n              appearance={'primary'}\r\n              label={actionLabel}\r\n              isLoading={isSaving}\r\n              disabled={isSaving}\r\n              onClick={saveHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.post}>{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileCodeEditor;\r\n","import NotFound from \"components/NotFound/NotFound\";\r\nimport Aux from \"components/_Aux/_Aux\";\r\n\r\n/**\r\n * Renders children if the value is not null or undefined\r\n * Renders not found component otherwise\r\n * @param param0 \r\n * @returns \r\n */\r\nconst NotFoundRender = ({ val, children }: { val?: any; children: any }) => {\r\n  return <Aux>{val ? children : <NotFound />}</Aux>;\r\n};\r\n\r\nexport default NotFoundRender;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfilePreviewModule_container__OmP++\",\"header\":\"ProfilePreviewModule_header__xr4OQ\",\"content\":\"ProfilePreviewModule_content__5bhOc\",\"menu\":\"ProfilePreviewModule_menu__G2aBy\",\"menuItem\":\"ProfilePreviewModule_menuItem__0p9aD\"};","import { ICode } from 'interfaces/post.interface';\r\nimport { useState } from 'react';\r\n// import styles\r\nimport classes from './ProfilePreviewModule.module.scss';\r\n\r\ninterface IProps {\r\n  title: string;\r\n  profileCode: ICode;\r\n  key: 'aboutWidget' | 'interestsWidget';\r\n}\r\n\r\nconst ProfilePreviewModule = (props: IProps) => {\r\n  const [height, setHeight] = useState<number>();\r\n\r\n  // get props\r\n  const { title, profileCode } = props;\r\n\r\n  // sets up code for module\r\n  const code = `\r\n  <html id=\"html\">\r\n      <head>\r\n          <style>\r\n          ${profileCode.css}\r\n          </style>\r\n      </head>\r\n      <body>\r\n          ${profileCode.html}\r\n      </body>\r\n\r\n      <script>\r\n          ${profileCode.js}\r\n      </script>\r\n  \r\n  </html>\r\n  `;\r\n\r\n  /**\r\n   * Gets the real heigh of the iframe and stores it in state\r\n   * Once the value is stored, the height value is applied\r\n   * to the iframe\r\n   * @param e\r\n   */\r\n  const updateHeight = (e: any) => {\r\n    const h = e.target.contentWindow.document.getElementById('html').offsetHeight;\r\n    setHeight(h);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.header}>\r\n        <p>{title}</p>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <iframe style={{ height: `${height}px`, width: '100%' }} title={title} srcDoc={code} onLoad={updateHeight} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePreviewModule;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"draggerDarkH\":\"SplitCodeEditor_draggerDarkH__iTbJy\",\"draggerDarkV\":\"SplitCodeEditor_draggerDarkV__TkYiJ\",\"gutterDarkH\":\"SplitCodeEditor_gutterDarkH__Ub06v\",\"gutterDarkV\":\"SplitCodeEditor_gutterDarkV__JA0OW\",\"draggerLightH\":\"SplitCodeEditor_draggerLightH__HYVre\",\"draggerLighV\":\"SplitCodeEditor_draggerLighV__Dys82\",\"gutterLightH\":\"SplitCodeEditor_gutterLightH__G+gnw\",\"gutterLightV\":\"SplitCodeEditor_gutterLightV__1klAi\",\"wrap\":\"SplitCodeEditor_wrap__+VLlI\",\"preview\":\"SplitCodeEditor_preview__gJbyM\",\"header\":\"SplitCodeEditor_header__dFkJm\",\"btn\":\"SplitCodeEditor_btn__N1LPe\",\"headerLeft\":\"SplitCodeEditor_headerLeft__xUZz-\",\"headerRight\":\"SplitCodeEditor_headerRight__MnIh4\",\"postContainer\":\"SplitCodeEditor_postContainer__8Ihko\",\"post\":\"SplitCodeEditor_post__0pvBR\"};","import ReactSplit, { SplitDirection } from '@devbookhq/splitter';\r\nimport ButtonSpinner from 'components/Buttons/ButtonSpinner/ButtonSpinner';\r\nimport CodeEditor from '../CodeEditor/CodeEditor';\r\nimport { useState } from 'react';\r\nimport { IUseCodeEditor } from 'interfaces/code.interface';\r\n\r\n// styles\r\nimport classes from './SplitCodeEditor.module.scss';\r\n\r\ninterface IProps {\r\n  htmlEditor?: IUseCodeEditor;\r\n  cssEditor?: IUseCodeEditor;\r\n  jsEditor?: IUseCodeEditor;\r\n  isSaving: boolean;\r\n  hasChanges: boolean;\r\n  actionLabel: string;\r\n  children: any;\r\n  exitEditorHandler: () => void;\r\n  saveAndExitHandler?: () => void;\r\n  updateHandler: () => void;\r\n  saveHandler: () => void;\r\n}\r\n\r\nconst SplitCodeEditor = (props: IProps) => {\r\n  const {\r\n    isSaving,\r\n    hasChanges,\r\n    children,\r\n    htmlEditor,\r\n    cssEditor,\r\n    jsEditor,\r\n    actionLabel,\r\n    exitEditorHandler,\r\n    saveAndExitHandler,\r\n    updateHandler,\r\n    saveHandler,\r\n  } = props;\r\n\r\n  // size of row witth the editors (i=0), and the row with the preview (i=1)\r\n  // sizes are percentages - 50.55 b-> .5055\r\n  const [sizes, setSizes] = useState([(1 / 2) * 100, (1 / 2) * 100]);\r\n\r\n  // Updates the size of the\r\n  function handleResize(gutterIdx: number, allSizes: number[]) {\r\n    setSizes(allSizes);\r\n  }\r\n\r\n  return (\r\n    <ReactSplit\r\n      gutterClassName={classes.gutterDarkV}\r\n      draggerClassName={classes.draggerDarkV}\r\n      direction={SplitDirection.Vertical}\r\n      onResizeFinished={handleResize}\r\n      initialSizes={sizes}\r\n    >\r\n      <ReactSplit\r\n        direction={SplitDirection.Horizontal}\r\n        gutterClassName={classes.gutterDarkH}\r\n        draggerClassName={classes.draggerDarkH}\r\n      >\r\n        {htmlEditor ? (\r\n          <CodeEditor editor={htmlEditor} height={sizes[0]} title=\"HTML\" defaultLanguage=\"html\" defaultValue=\"\" />\r\n        ) : null}\r\n        {cssEditor ? (\r\n          <CodeEditor editor={cssEditor} height={sizes[0]} title=\"CSS\" defaultLanguage=\"css\" defaultValue=\"\" />\r\n        ) : null}\r\n        {jsEditor ? (\r\n          <CodeEditor editor={jsEditor} height={sizes[0]} title=\"JS\" defaultLanguage=\"javascript\" defaultValue=\"\" />\r\n        ) : null}\r\n      </ReactSplit>\r\n\r\n      <div className={classes.wrap}>\r\n        <div className={classes.preview}>\r\n          <div className={classes.header}>\r\n            <div className={classes.headerLeft}>\r\n              <ButtonSpinner\r\n                className={classes.btn}\r\n                size=\"xs\"\r\n                color=\"red\"\r\n                type={'button'}\r\n                appearance={'primary'}\r\n                label={'Exit Editor'}\r\n                isLoading={false}\r\n                disabled={isSaving}\r\n                onClick={exitEditorHandler}\r\n              />\r\n\r\n              {saveAndExitHandler ? (\r\n                <ButtonSpinner\r\n                  className={classes.btn}\r\n                  size=\"xs\"\r\n                  color=\"green\"\r\n                  type={'button'}\r\n                  appearance={'primary'}\r\n                  label={'Save And Exit'}\r\n                  isLoading={false}\r\n                  disabled={isSaving}\r\n                  onClick={saveAndExitHandler}\r\n                />\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </div>\r\n\r\n            <div className={classes.headerRight}>\r\n              <ButtonSpinner\r\n                className={classes.btn}\r\n                size=\"xs\"\r\n                color=\"blue\"\r\n                type={'button'}\r\n                appearance={'primary'}\r\n                label={'Update Preview'}\r\n                isLoading={false}\r\n                disabled={!hasChanges || isSaving}\r\n                onClick={updateHandler}\r\n              />\r\n\r\n              <ButtonSpinner\r\n                className={classes.btn}\r\n                size=\"xs\"\r\n                color=\"green\"\r\n                type={'button'}\r\n                appearance={'primary'}\r\n                label={actionLabel}\r\n                isLoading={isSaving}\r\n                disabled={isSaving}\r\n                onClick={saveHandler}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.postContainer}>\r\n            <div className={classes.post}>{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ReactSplit>\r\n  );\r\n};\r\n\r\nexport default SplitCodeEditor;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function usePostEditor(code: string | undefined, setHasChanges: (b: boolean) => void, language: string) {\r\n  const location = useLocation(); //\r\n  const editorUnsavedChangesKey = location.pathname.replace('/', '') + language;\r\n  const editorThemeKey = location.pathname.replace('/', '') + language;\r\n\r\n  // editor state\r\n  const [value, setValue] = useState<string>('');\r\n  const [theme, setTheme] = useState<string>('vs-dark');\r\n\r\n  // editor ref\r\n  const editorRef = useRef<any>(null);\r\n\r\n  /**\r\n   * Updates the editor original code value\r\n   */\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (mounted && code) {\r\n      setValue(code);\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [code]);\r\n\r\n  /**\r\n   * Updates the editor state\r\n   * 1. updates code value + localstorage\r\n   * 2. updates hasChanges state\r\n   * @param val The new code value\r\n   */\r\n  const handleEditorChange = (val: string | undefined): void => {\r\n    if (val) {\r\n      localStorage[editorUnsavedChangesKey] = val;\r\n      setValue(val);\r\n    } else {\r\n      localStorage[editorUnsavedChangesKey] = '';\r\n      setValue('');\r\n    }\r\n\r\n    // only mark as changes if new value is different from original value and original\r\n    // is not empty\r\n    if (value !== val && value !== '') {\r\n      setHasChanges(true);\r\n    } else {\r\n      setHasChanges(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Updates the editor ref when the Editor component mounts\r\n   * @param editor \r\n   */\r\n  const handleEditorDidMount = (editor: any): void => {\r\n    editorRef.current = editor;\r\n  };\r\n\r\n  /**\r\n   * Returns total count for lines of code\r\n   * @returns \r\n   * - Number for total lines of code\r\n   */\r\n  const getLinesCount = (): number => {\r\n    if (editorRef && editorRef.current) return editorRef.current.getModel().getLineCount();\r\n\r\n    return 0;\r\n  };\r\n\r\n  /**\r\n   * Updates the editors theme and stores the change in local storage\r\n   * @param newTheme\r\n   */\r\n  const updateTheme = (newTheme: string) => {\r\n    localStorage[editorThemeKey] = newTheme;\r\n    setTheme(newTheme);\r\n  };\r\n\r\n  return { value, theme, handleEditorDidMount, handleEditorChange, getLinesCount, updateTheme };\r\n}\r\n","import { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAppSelector } from 'store/hooks';\r\nimport { getHistory, getPreviousPath } from 'store/slices/userSessionSlice';\r\n\r\n/**\r\n *\r\n * @returns\r\n */\r\nexport default function usePreviousPathNav() {\r\n  const { pathname } = useLocation();\r\n  // get react router navigate\r\n  const navigate = useNavigate();\r\n\r\n  // get previous path\r\n  const prevPath = useAppSelector(getPreviousPath);\r\n\r\n  const history = useAppSelector(getHistory);\r\n\r\n  const goBack = () => {\r\n    const length = history.length;\r\n\r\n    if (length === 1) {\r\n      // go to stored previous path\r\n      navigate(prevPath);\r\n    } else {\r\n      if (history[history.length - 2] === pathname) {\r\n        navigate('/');\r\n      } else {\r\n        navigate(history[history.length - 2]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return { goBack };\r\n}\r\n"],"names":["BASE_URL","getProfileApi","username","url","axiosInstance","response","data","payload","getProfileAboutApi","getProfileInterestsApi","getProfileLayoutApi","updateProfileLayoutApi","updateProfileAboutApi","updateProfileInterestsApi","props","title","editor","defaultValue","defaultLanguage","height","className","classes","style","width","backgroundColor","onMount","handleEditorDidMount","value","onChange","handleEditorChange","theme","options","scrollBeyondLastLine","minimap","enabled","isSaving","htmlEditor","cssEditor","jsEditor","actionLabel","children","exitEditorHandler","saveAndExitHandler","saveHandler","updateHandler","useState","tabs","setTabs","length","activeTab","setActiveTab","useEffect","mounted","t","push","label","getTabs","getTabIndex","map","indexOf","i","Button","onClick","display","CodeEditor","ButtonSpinner","size","color","type","appearance","isLoading","disabled","val","setHeight","profileCode","code","css","html","js","srcDoc","onLoad","e","h","target","contentWindow","document","getElementById","offsetHeight","hasChanges","sizes","setSizes","gutterClassName","draggerClassName","direction","SplitDirection","onResizeFinished","gutterIdx","allSizes","initialSizes","usePostEditor","setHasChanges","language","location","useLocation","editorUnsavedChangesKey","pathname","replace","editorThemeKey","setValue","setTheme","editorRef","useRef","current","localStorage","getLinesCount","getModel","getLineCount","updateTheme","newTheme","usePreviousPathNav","navigate","useNavigate","prevPath","useAppSelector","getPreviousPath","history","getHistory","goBack"],"sourceRoot":""}